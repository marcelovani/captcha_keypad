<?php

/**
 * @file Module for captcha_keypad.
 * Captcha keypad module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function captcha_keypad_help($path, $arg) {
  $output = '';

  switch ($path) {
    case 'help.page.captcha_keypad':
      $filepath = dirname(__FILE__) . '/README.md';
      if (file_exists($filepath)) {
        $output = nl2br(file_get_contents($filepath));
      }
      break;
  }

  return $output;
}

/**
 * Implements hook_permission().
 */
function captcha_keypad_permission() {
  $permissions = [];

  $permissions['administer captcha keypad'] = [
    'title' => t('Administer Capcha keypad'),
  ];
  return $permissions;
}

/**
 * Implements hook_form_alter().
 */
function captcha_keypad_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add the keypad to selected forms.
  $form_ids = \Drupal::config('captcha_keypad.settings')->get('captcha_keypad_forms');
  if (!in_array($form_id, array_filter($form_ids))) {
    return;
  }

  $digits = \Drupal::config('captcha_keypad.settings')->get('captcha_keypad_code_size');

  $form['captcha_keypad'] = [
    '#title' => t('Security'),
    '#type' => 'fieldset',
    '#attributes' => ['class' => ['captcha-keypad-wrapper']],
    '#weight' => (isset($form['actions']['#weight']) ? $form['actions']['#weight'] - 1 : 99.5),
  ];

  $form['captcha_keypad']['captcha_keypad_input'] = [
    '#title' => t('Code'),
    '#type' => 'textfield',
    '#attributes' => ['class' => ['captcha-keypad-input']],
    '#size' => $digits,
    '#required' => TRUE,
  ];

  if (!isset($form_state->input['captcha_keypad_hidden'])) {
    $code = _captcha_keypad_get_code($digits);
  }
  else {
    $code = $form_state->input['captcha_keypad_hidden'];
  }

  $form['captcha_keypad']['captcha_keypad_hidden'] = [
    '#type' => 'hidden',
    '#size' => 1,
    '#value' => $code,
  ];

  $form['captcha_keypad']['captcha_keypad_keypad_used'] = [
    '#type' => 'hidden',
    '#size' => 1,
    '#attributes' => ['class' => ['captcha-keypad-keypad-used']],
    '#default_value' => '',
  ];

  $keypad = '';
  $keys = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  if (\Drupal::config('captcha_keypad.settings')->get('captcha_keypad_shuffle_keypad')) {
    shuffle($keys);
  }
  for ($n = 0; $n <= 8; $n++) {
    $keypad .= '<span>' . $keys[$n] . '</span>';
  }
  $form['captcha_keypad']['keypad'] = [
    '#prefix' => '<span class="captcha-keypad"><span class="inner">',
    '#markup' => $keypad,
    '#suffix' => '</span></span>',
  ];

  $form['captcha_keypad']['code'] = [
    '#prefix' => '<span class="sequence">',
    '#markup' => t('Click/tap this sequence: <strong>:code</strong>', [':code' => $code]),
    '#suffix' => '</span>',
  ];

  array_unshift($form['#validate'], 'captcha_keypad_form_validate');

  // Rebuild form.
  $form_state->setRebuild();

  _captcha_keypad_add_js_css($form);
}

/**
 * Callback function for form submit.
 */
function captcha_keypad_form_validate(array &$form, FormStateInterface $form_state) {
  $input = $form_state->getUserInput();
  foreach (['input', 'hidden', 'keypad_used'] as $i) {
    $v = "captcha_keypad_$i";
    $$v = isset($input[$v]) ? $input[$v] : '';
  }

  if ($captcha_keypad_input != $captcha_keypad_hidden || $captcha_keypad_keypad_used != 'Yes') {
    _captcha_keypad_add_js_css($form);
    $form_state->setErrorByName('captcha_keypad_input', t('Invalid security code.'));
  }
}

/**
 * Helper to generate the code.
 */
function _captcha_keypad_get_code($digits) {
  // Little trick to allow testing.
  if ($digits == '99') {
    return 'testing';
  }

  // Limit size.
  if ($digits > 16) {
    $digits = 16;
  }

  $code = rand(pow(10, $digits - 1), pow(10, $digits) - 1);
  $code = str_replace('0', '1', $code . '');

  return $code;
}

/**
 * Helper to add css and javascript.
 */
function _captcha_keypad_add_js_css(&$form) {
  $form['#attached']['library'][] = 'captcha_keypad/captcha_keypad';
}
